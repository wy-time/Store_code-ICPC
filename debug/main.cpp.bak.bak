#include <iostream>
#include <set> 
#include <cstring> 
#include <algorithm> 
#include <cstdio>
using namespace std;
typedef long long ll;
#define wfor(i,j,k) for(i=j;i<k;++i)
#define mfor(i,j,k) for(i=j;i>=k;--i)
// void read(ll &x) {
// 	char ch = getchar(); x = 0;
// 	for (; ch < '0' || ch > '9'; ch = getchar());
// 	for (; ch >= '0' && ch <= '9'; ch = getchar()) x = x * 10 + ch - '0';
// }
ll coin[3];
ll kind[3]={10,20,50};
set <ll>st;
void slove(ll now)
{
    ll i;
    st.insert(now);
    wfor(i,0,3)
    {
        if(coin[i]!=0)
        {
            coin[i]-=1;
            slove(now+kind[i]);
            coin[i]+=1;
        }
    }
    return ;
}
int main()
{
    std::ios::sync_with_stdio(false);
    #ifdef test
    freopen("F:\\Desktop\\question\\in.txt","r",stdin);
    #endif
    #ifdef ubuntu
    freopen("/home/time/debug/debug/in","r",stdin);
    freopen("/home/time/debug/debug/out","w",stdout);
    #endif
    ll t;
    cin>>t;
    while(t--)
    {
        memset(coin,0,sizeof(coin));
        ll num[105];
        ll num2[105];
        ll n;
        cin>>n;
        ll i;
        ll ans=0;
        wfor(i,0,n)
        {
            cin>>num[i];
        }
        sort(num,num+n);
        if(num[0]>=100)
        {
            ans=max(ans,num[0]/100);
            num[0]%=100;
        }
        n=unique(num,num+n)-num;
        wfor(i,1,n)
        {
            if(num[i]-num[i-1]>=100)
            {
                ll cha=num[i]-num[i-1];
                ans=max(ans,cha/100);
                num[i]-=cha/100*100;
            }
        }
        memcpy(num2,num,sizeof(num));
        ll flag=0;
        ll maxisok=0;
        wfor(i,0,n)
        {
            ll j;
            if(st.count(num[i])!=1)
            {
                if(!st.empty())
                {
                    maxisok=*st.rbegin();
                    auto it=st.upper_bound(num[i]);
                    it--;
                    num[i]-=*it;
                    maxisok-=*it;
                }
                mfor(j,2,0)
                {
                    if(num[i]>=kind[j])
                    {
                        ll cnt=num[i]/kind[j];
                        num[i]-=cnt*kind[j];
                        if(kind[j]<=maxisok&&st.count(kind[j])!=0)
                        {
                            int temp=min(cnt,maxisok/kind[j]);
                            maxisok-=temp*kind[j];
                            cnt-=temp;
                        }
                        coin[j]+=cnt;
                    }
                }
                if(num[i]!=0)
                {
                    flag=1;
                    break;
                }
            }
            slove(0);
        }
        if(!flag)
        {
            flag=0;
            while(coin[0]>=1&&coin[1]>=2)
            {
                coin[0]-=1;
                coin[1]-=2;
                coin[2]+=1;
                st.clear();
                slove(0);
                wfor(i,0,n)
                {
                    if(st.count(num2[i])!=1)
                    {
                        flag=1;
                        break;
                    }
                }
                if(flag)
                {
                    coin[0]+=1;
                    coin[1]+=2;
                    coin[2]-=1;
                    break;
                }
            }
            flag=0;
            while(coin[0]>=2)
            {
                coin[0]-=2;
                coin[1]+=1;
                st.clear();
                slove(0);
                wfor(i,0,n)
                {
                    if(st.count(num2[i])!=1)
                    {
                        flag=1;
                        break;
                    }
                }
                if(flag)
                {
                    coin[0]+=2;
                    coin[1]-=1;
                    break;
                }
            }
            flag=0;
            while(coin[0]>=1&&coin[1]>=2)
            {
                coin[0]-=1;
                coin[1]-=2;
                coin[2]+=1;
                st.clear();
                slove(0);
                wfor(i,0,n)
                {
                    if(st.count(num2[i])!=1)
                    {
                        flag=1;
                        break;
                    }
                }
                if(flag)
                {
                    coin[0]+=1;
                    coin[1]+=2;
                    coin[2]-=1;
                    break;
                }
            }
            wfor(i,0,3)
                ans+=coin[i];
            cout<<ans<<endl;
        }else
            cout<<-1<<endl;
    }
    return 0;
}
