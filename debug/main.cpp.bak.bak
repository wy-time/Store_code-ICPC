#include <cstring>
#include <unordered_map> 
#include <iostream>
#include <cstdio>
using namespace std;
typedef long long ll;
#define wfor(i,j,k) for(i=j;i<k;++i)
#define mfor(i,j,k) for(i=j;i>=k;--i)
// void read(int &x) {
// 	char ch = getchar(); x = 0;
// 	for (; ch < '0' || ch > '9'; ch = getchar());
// 	for (; ch >= '0' && ch <= '9'; ch = getchar()) x = x * 10 + ch - '0';
// }
const int maxn = 3e5+5;
char ss[maxn];
char s[2 * maxn];
int plen[2 * maxn];
void cal_plen();
ll ans[maxn];
int main()
{
	//std::ios::sync_with_stdio(false);
#ifdef test
	freopen("F:\\Desktop\\question\\in.txt", "r", stdin);
#endif
	while (scanf("%s",ss)!=EOF)
	{
		int len = strlen(ss);
        memset(ans,0,sizeof(ll)*(len+5));
		int i;
		s[0] = '@';
		wfor(i, 1, len + 1)
		{
			s[(i << 1) - 1] = '#';
			s[i << 1] = ss[i - 1];
		}
		s[(i << 1) - 1] = '#';
		s[i << 1] = '$';
		s[i << 1 | 1] = '\0';
		cal_plen();
        len=strlen(s)-2;
        wfor(i,1,len)
        {
            if(plen[i]-1>=1)
            {
                int lengt=plen[i]-1;
                int beg=(i-plen[i]);
                while(lengt>0)
                {
                    if(lengt%2==0)
                    {
                        if(plen[beg+(lengt)/2+1]-1>=(lengt)/2&&(plen[beg+(lengt)/2+1]-1-((lengt)/2))%2==0)
                            ans[lengt]++;
                    }else
                    {
                        if(plen[beg+(lengt+1)/2+1]-1>=(lengt+1)/2&&(plen[beg+(lengt+1)/2+1]-1-((lengt+1)/2))%2==0)
                            ans[lengt]++;
                    }
                    lengt-=2;
                    beg+=2;
                }
            }
        }
        len=strlen(ss);
        wfor(i,1,len)
        {
            //cout<<ans[i]<<" ";
            printf("%lld ",ans[i]);
        }
        printf("%lld\n",ans[i]);
	}
	return 0;
}
void cal_plen()
{
	int len = strlen(s);
	int i;
	int pos = 0; int mx = 0;
	wfor(i, 1, len)
	{
		if (mx > i)
			plen[i] = min(plen[2 * pos - i], mx - i);
		else
			plen[i] = 1;
		while (s[i - plen[i]] == s[i + plen[i]])
			plen[i]++;
		if (i + plen[i] > mx)
		{
			mx = i + plen[i];
			pos = i;
		}
	}
}
